@page "/cart"

@inject NekoClient nekoClient
@inject WalletClient walletClient
@rendermode InteractiveServer

<PageTitle>Корзина</PageTitle>

@if (nekoPosts.Length == 0)
{
	<h2>В корзине сейчас ничего нету, Господин</h2>
	<img src="https://upload.wikimedia.org/wikipedia/commons/3/39/Breadindia.jpg" alt="ЭЭЭЭЭЭЭЭЭЭЭ" style="height: 50vh;" />
}
else
{
	<div style="display: flex; flex-wrap:wrap">
		@foreach (NekoPost nekoPost in nekoPosts)
		{
			<div class="card mb-4 box-shadow" style="display: flex; flex-direction: column; width: 40vh;">
				<img style="width: 40vh; height: 40vh; object-fit:contain" class="card-img-top" src="@nekoPost.Image" alt="ЭЭЭЭЭЭЭЭЭЭЭ" />
				<a style="margin: 1vh; font-size: 3vh; text-decoration: none;" class="link-info card-body" href="/nekopage/@nekoPost.Id">@nekoPost.Name</a>
				<div class="card-footer">
					<div style="display: flex; justify-content: space-between" >
						<h5 style="margin: 1vh" class="text">@nekoPost.Price₽</h5>
						<button style="margin: 1vh" @onclick="()=>AddCart(nekoPost)">@(nekoClient.GetLiked().Any(n => n.Id == nekoPost.Id) ? "❤️" : "🤍")</button>
					</div>
					<button style="margin: 1vh" @onclick="()=>Restore(nekoPost)">Убрать из корзины</button>
				</div>
			</div>
		}
	</div>
}

@code {
	private NekoPost[] nekoPosts = [];

	protected override void OnInitialized()
	{
		nekoPosts = nekoClient.GetCart();
	}

	private void AddCart(NekoPost neko)
	{
		if (nekoClient.GetLiked().Contains(neko))
			nekoClient.DeleteLiked(neko.Id);
		else
			nekoClient.AddToLiked(neko);
	}

	private void Restore(NekoPost neko)
	{
		nekoClient.AddPost(neko);
		walletClient.Account += neko.Price;
		nekoPosts = nekoPosts.Where(n => n.Id != neko.Id).ToArray();
		nekoClient.DeleteCart(neko.Id);
	}
}
